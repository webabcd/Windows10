<Page
    x:Class="Windows10.Controls.BaseControl.ControlDemo.Demo2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Windows10.Controls.BaseControl.ControlDemo"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="Orange">
        <StackPanel Name="stackPanel" Background="Blue" Margin="100">

            <!--
                用于演示 TabIndex 和 IsTabStop
            -->
            <TextBox Name="textBox1" TabIndex="5" Margin="5" />
            <TextBox Name="textBox2" TabIndex="3" Margin="5" />
            <TextBox Name="textBox3" IsTabStop="False" TabIndex="4" Margin="5" />
            <TextBox Name="textBox4" TabIndex="1" Margin="5" />
            <TextBox Name="textBox5" TabIndex="2" Margin="5" />


            <ComboBox Name="cmbTabNavigation" PlaceholderText="HorizontalAlignment" IsTabStop="False" SelectionChanged="cmbTabNavigation_SelectionChanged" Margin="5">
                <ComboBoxItem IsSelected="True">Local</ComboBoxItem>
                <ComboBoxItem>Cycle</ComboBoxItem>
                <ComboBoxItem>Once</ComboBoxItem>
            </ComboBox>
            <!--
                用于演示 TabNavigation
                1、Local - 当 focus 至 itemsControl 时，会逐一 focus 其内部的所有 Control 元素，然后退出 focus
                2、Cycle - 当 focus 至 itemsControl 时，会逐一 focus 其内部的所有 Control 元素，然后再继续无限循环 focus 其内部的所有 Control 元素
                3、Once - 当 focus 至 itemsControl 时，只会 focus 其内部的第一个 Control 元素，然后退出 focus
            -->
            <ItemsControl Name="itemsControl" Margin="5" HorizontalAlignment="Left">
                <ItemsControl.Items>
                    <TextBox  />
                    <TextBox  />
                    <TextBox  />
                </ItemsControl.Items>
            </ItemsControl>

            
            <!--
                用于演示 UseSystemFocusVisuals
                1、UseSystemFocusVisuals="False" 获取焦点后，不会有任何效果，如果需要自定义获取焦点后的效果的话请在控件模板中设置
                2、UseSystemFocusVisuals="True" 获取焦点后，由系统绘制效果（我这里测试的效果是，有一个虚线的边框显示）
            -->
            <Button Content="i am button 1" UseSystemFocusVisuals="False" Margin="5" />
            <Button Content="i am button 2" UseSystemFocusVisuals="True" Margin="5" />
            <Button Content="i am button 3" UseSystemFocusVisuals="False" Margin="5">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <VisualState.Setters>
                                            <Setter Target="border.BorderThickness" Value="5" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="border" BorderBrush="Red" BorderThickness="0">
                                <ContentPresenter x:Name="ContentPresenter"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Content="{TemplateBinding Content}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    AutomationProperties.AccessibilityView="Raw"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            
            <!--
                IsTemplateFocusTarget - 是否是控件内用于获取焦点的元素（附加属性）
            -->
            <Button Content="i am button 4" Margin="5">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <Border x:Name="border" BorderBrush="Red" BorderThickness="0">
                                <StackPanel>
                                    <ContentPresenter x:Name="ContentPresenter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Content="{TemplateBinding Content}"
                                        ContentTransitions="{TemplateBinding ContentTransitions}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        AutomationProperties.AccessibilityView="Raw"/>
                                    <!--
                                        Control.IsTemplateFocusTarget="True" - 代表此 Button 控件用于获取焦点的元素是此 TextBlock
                                    -->
                                    <TextBlock Control.IsTemplateFocusTarget="True" Text="IsTemplateFocusTarget" />
                                </StackPanel>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>

        </StackPanel>
    </Grid>
</Page>
