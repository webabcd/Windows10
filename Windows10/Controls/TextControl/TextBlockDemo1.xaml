<Page
    x:Class="Windows10.Controls.TextControl.TextBlockDemo1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Windows10.Controls.TextControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="Transparent">
        <StackPanel Margin="10 0 10 10">

            <!--
                TextBlock 的常用属性
                    Text - 显示的文本,如果需要显示引号等特殊字符需要使用相应的 HTML 编码
                    Foreground - 文本颜色
                    FontFamily - 首选字体，多个用“,”分隔，找不到第 1 个就用第 2 个，找不到第 2 个就用第 3 个，以此类推
                    FontSize - 字号大小（单位：像素）
                    FontWeight - 字体粗细（FontWeights 实体类），默认值是 Normal
                    FontStyle - 字体样式（FontStyle 枚举），默认值是 Normal
                        Italic - 使用字体自带的斜体
                        Oblique - 通过程序让正常字体倾斜（对于自身不带斜体的字体可以使用此值让字体倾斜）
                    FontStretch - 字体的拉伸值（FontStretch 枚举），默认值是 Normal（大部分字体都不支持这个属性）
                    Padding - Padding
                    IsTextScaleFactorEnabled - 是否启用文本自动放大功能（默认值是 true）
                        在“设置”->“轻松使用”中可以调整文本缩放大小，IsTextScaleFactorEnabled 就是用于决定 TextBlock 显示的文本是否跟着这个设置走
            -->
            <TextBlock Text="i am a &quot;TextBlock&quot;" Margin="5"
                       Foreground="Blue" 
                       FontFamily="微软雅黑" 
                       FontSize="24" 
                       FontWeight="Bold" 
                       FontStyle="Italic"
                       FontStretch="Normal"
                       Padding="5" />


            <!--
                 TextAlignment - 文本的水平对齐方式
                    Center, Left（默认值）, Right, Justify（两端对齐）
            -->
            <TextBlock Text="i am a &quot;TextBlock&quot;" Margin="5" TextAlignment="Justify" />


            <!--
                TextWrapping - 换行方式
                    NoWrap - 不换行
                    Wrap - 换行，必要时可截断单词
                    WrapWholeWords - 换行，但是绝不截断单词，即使单词可能会显示不全
            -->
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghijklmnopq www" Margin="5" TextWrapping="NoWrap" />
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghijklmnopq www" Margin="5" TextWrapping="Wrap" />
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghijklmnopq www" Margin="5" TextWrapping="WrapWholeWords" />



            <!--
                TextTrimming - 内容溢出时的修整方式
                    None - 不修整文本
                    Clip - 在像素级别修整文本
                    WordEllipsis - 在单词级别修整文本，同时用省略号代替剩余文本
                    CharacterEllipsis - 在字符级别修整文本，同时用省略号代替剩余文本
            -->
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghi jklmnopqrstuvwxyz" Margin="5" TextTrimming="None"/>
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghi jklmnopqrstuvwxyz" Margin="5" TextTrimming="Clip"/>
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghi jklmnopqrstuvwxyz" Margin="5" TextTrimming="WordEllipsis"/>
            <TextBlock Width="100" HorizontalAlignment="Left" Text="abcdefghi jklmnopqrstuvwxyz" Margin="5" TextTrimming="CharacterEllipsis"/>


            <!--
                MaxLines - 用于指定文本最大的显示行数
            -->
            <TextBlock MaxLines="3" Margin="5">
                <TextBlock.Inlines>
                    <Run>111111</Run>
                    <LineBreak />
                    <Run>222222</Run>
                    <LineBreak />
                    <Run>333333</Run>
                    <LineBreak />
                    <Run>444444</Run>
                    <LineBreak />
                    <Run>555555</Run>
                </TextBlock.Inlines>
            </TextBlock>


            <!--
                CharacterSpacing - 用于设置字符间距
                    具体字符间隔像素计算公式如下：字体大小 * CharacterSpacing值 / 1000 = 字符间距像素值
                LineHeight - 行高
                LineStackingStrategy - 控制行高的策略
                    MaxHeight - 每行的行高以 LineHeight 值和每行的自然行高中的最大值为准。默认值
                    BlockLineHeight - 每行的行高以 LineHeight 值为准，以字符区域为参考
                    BaselineToBaseline - 每行的行高以 LineHeight 值为准，以基线为参考（什么是基线：英文字符的基线基本相当于单词本4条线中的第3条线）
                Inlines - 内联元素的集合。包括 span, bold, italic, underline 等，但是 InlineUIContainer 不可用，其需要在 RichTextBlock 中使用
            -->
            <TextBlock Margin="5" CharacterSpacing="100" LineStackingStrategy="MaxHeight" LineHeight="50">
                <TextBlock.Inlines>
                    <Run Foreground="Red">Run</Run>
                    <Span Foreground="Blue">Span</Span>
                    <LineBreak />
                    <Bold>Bold</Bold>
                    <Italic>Italic</Italic>
                    <Underline>Underline</Underline>
                </TextBlock.Inlines>
            </TextBlock>


            <!--
                TextLineBounds - 行框的绘制方式
                    Full - 正常，默认值
                    TrimToCapHeight - 行框顶部和大写字体的顶部一致
                    TrimToBaseline - 行框底部与文本基线一致（什么是基线：英文字符的基线基本相当于单词本4条线中的第3条线）
                    Tight -  行框顶部和大写字体的顶部一致，行框底部与文本基线一致
            -->
            <Grid Background="Red" Margin="5">
                <TextBlock Text="Aj" FontSize="24" TextLineBounds="Full" />
            </Grid>
            <Grid Background="Red" Margin="5">
                <TextBlock Text="Aj" FontSize="24" TextLineBounds="TrimToCapHeight" />
            </Grid>
            <Grid Background="Red" Margin="5">
                <TextBlock Text="Aj" FontSize="24" TextLineBounds="TrimToBaseline" />
            </Grid>
            <Grid Background="Red" Margin="5">
                <TextBlock Text="Aj" FontSize="24" TextLineBounds="Tight" />
            </Grid>

            
            <!--
                在 xaml 中使用特殊字符，如下打印的内容为“<>&"”
            -->
            <TextBlock Text="&lt;&gt;&amp;&quot;" Margin="5" />


            <!--
                通过 ASCII 编码显示指定的字符
            
                &#61; 十进制，其对应的是“=”
                &#x3D; 十六进制，其对应的是“=”
                &#38; 十进制，其对应的是“&”
                &#x26; 十六进制，其对应的是“&”
            -->
            <TextBlock Text="&#61;&#x3D;&#38;&#x26;" Margin="5" />

        </StackPanel>
    </Grid>
</Page>
